apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp-frontend
  template:
    metadata:
      labels:
        app: myapp-frontend
    spec:
      volumes:
        - name: nginx-data
          emptyDir: {}
        - name: config
          configMap:
            name: nginx-config
        - name: html
          configMap:
            name: frontend-html
      initContainers:
        - name: copy-html
          image: busybox
          command: ["/bin/sh", "-c"]
          args: ["cp /html/index.html /data/index.html"]
          volumeMounts:
            - name: html
              mountPath: /html
            - name: nginx-data
              mountPath: /data
        - name: copy-config
          image: busybox
          command: ["/bin/sh", "-c"]
          args: ["cp /conf/default.conf /etc/nginx/conf.d/default.conf"]
          volumeMounts:
            - name: config
              mountPath: /conf
            - name: nginx-data
              mountPath: /etc/nginx/conf.d
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-data
              mountPath: /usr/share/nginx/html
            - name: nginx-data
              mountPath: /etc/nginx/conf.d





# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: myapp-frontend
#   labels:
#     app: myapp
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: myapp
#   template:
#     metadata:
#       labels:
#         app: myapp
#     spec:
#       containers:
#         - name: frontend
#           image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 80
#           envFrom:
#             - configMapRef:
#                 name: "nginx-config"
#             - configMapRef:
#                 name: "frontend-html"
      #     volumeMounts:
      #       - name: nginx-config
      #         mountPath: /etc/nginx/conf.d/
      #         readOnly: true
      #       - name: frontend-html
      #         mountPath: /usr/share/nginx/html/
      #         readOnly: true
      # volumes:
      #   - name: nginx-config
      #     configMap:
      #       name: nginx-config
      #   - name: frontend-html
      #     configMap:
      #       name: frontend-html



# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ include "frontend.fullname" . }}
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: frontend
#   template:
#     metadata:
#       labels:
#         app: frontend
#     spec:
#       containers:
#         - name: frontend
#           image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
#           ports:
#             - containerPort: 80
#           volumeMounts:
#             - name: nginx-config
#               mountPath: /etc/nginx/conf.d/default.conf
#               subPath: default.conf
#               readOnly: true
#             - name: frontend-html
#               mountPath: /usr/share/nginx/html
#       volumes:
#         - name: nginx-config
#           configMap:
#             name: {{ .Values.frontend.configMap.nginxConfigMap }}
#         - name: frontend-html
#           configMap:
#             name: {{ .Values.frontend.configMap.nginxConfigMap }}


